<Window x:Class="AudioNoteTranscription.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:localVM="clr-namespace:AudioNoteTranscription.ViewModel"
        xmlns:localExtensions="clr-namespace:AudioNoteTranscription.Extensions"
        xmlns:localWhisper="clr-namespace:AudioNoteTranscription.Whisper"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        DataContext="{Binding TranscriptionViewModel, Source={x:Static localVM:ViewModelLocator.Instance}}"
        Title="Note Transcript Demo" Height="450" Width="1035">
    <Window.Resources>
        <Style TargetType="TextBlock" x:Key="HeaderTextBlockStyle">
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Foreground" Value="#0078D7" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="Margin" Value="10,0,10,0" />
        </Style>

        <Style TargetType="TextBox" x:Key="InputTextBoxStyle">
            <Setter Property="Margin" Value="10,5,10,10" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="#0078D7" />
        </Style>

        <Style TargetType="Button" x:Key="ActionButtonStyle">
            <Setter Property="Margin" Value="10" />
            <Setter Property="Padding" Value="10,5" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="#0078D7" />
        </Style>

        <Style TargetType="ListBox" x:Key="ImageListBoxStyle">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="#0078D7" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Margin" Value="10" />
        </Style>

        <FontFamily x:Key="SymbolFontFamily">Segoe MDL2 Assets</FontFamily>
        <Style x:Key="CircularButton" TargetType="Button">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="#0078D7" />
            <Setter Property="Width" Value="50" />
            <Setter Property="Height" Value="50" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse x:Name="buttonBorder" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" />
                            <ContentPresenter x:Name="buttonContent" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="buttonBorder" Property="StrokeThickness" Value="2" />
                                <Setter TargetName="buttonBorder" Property="Stroke" Value="#5C5C5C" />
                                <Setter TargetName="buttonContent" Property="RenderTransform" >
                                    <Setter.Value>
                                        <TranslateTransform Y="1" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="buttonContent" Property="Opacity" Value="0.5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonBorder" Property="Stroke" Value="#E1E1E1" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="buttonContent" Property="RenderTransform" >
                                    <Setter.Value>
                                        <TranslateTransform Y="0" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F3F3F3" Offset="0"/>
            <GradientStop Color="#EBEBEB" Offset="0.5"/>
            <GradientStop Color="#DDDDDD" Offset="0.5"/>
            <GradientStop Color="#CDCDCD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
        <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <StackPanel Margin="{TemplateBinding Margin}">
                            <StackPanel Orientation="Horizontal">
                                <Border x:Name="on" Width="25" Height="25" Background="LightGray" CornerRadius="2,0,0,4" Margin="10,0,0,0">
                                    <TextBlock x:Name="onText" Text="On" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <Border x:Name="off" Width="25" Height="25" Background="LightGray" CornerRadius="0,2,4,0">
                                    <TextBlock x:Name="offText" Text="Off" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  Margin="{TemplateBinding Padding}" 
                                                  RecognizesAccessKey="True" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </StackPanel>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="on" Property="Background" Value="#0078D7"/>
                                <Setter TargetName="onText" Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="off" Property="Background" Value="#0078D7"/>
                                <Setter TargetName="offText" Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="70" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <StackPanel 
            Grid.Row="1" Grid.ColumnSpan="2"
                    Orientation="Horizontal" 
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Center" Width="920">

            <Button x:Name="loadButton"
                    Content="Load" 
                    Margin="10" 
                    Click="LoadButton_Click" 
                    ClickMode="Press"
                    Style="{StaticResource ActionButtonStyle}"/>
            <Button x:Name="saveButton"
                    Content="Save" 
                    Margin="10" 
                    ClickMode="Press"
                    Command="{Binding SaveCommand}"
                    Style="{StaticResource ActionButtonStyle}" />
            <ComboBox Width="102" Height="30"
                      ItemsSource="{Binding Languages}"
                      SelectedValue="{Binding SelectedLanguage}"/>
            <Button x:Name="loadModelButton"
                    Content="Set model path" 
                    Click="loadModelButton_Click" 
                    ClickMode="Press"
                    Style="{StaticResource ActionButtonStyle}"/>
            <ToggleButton x:Name="cloudInference"
                          Margin="5,10,5,10" 
                          Content="realtime"
                          IsChecked="{Binding IsRealtime}"
                          Style="{StaticResource ToggleButtonStyle}"/>
            <ComboBox Width="102" Height="30"
                ItemsSource="{Binding Source={localExtensions:EnumBindingSource {x:Type localExtensions:ExecutionProvider}}}"
                SelectedValue="{Binding SelectedProvider}"/>
            <CheckBox Content="Microfone" Width="78" Height="17" Margin="10,10,5,10" Command="{Binding MicCommand}" CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" IsChecked="{Binding IsMic}" />
            <CheckBox Content="Output" Width="78" Height="17" Margin="5,10,10,10" Command="{Binding LoopbackCommand}" CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" IsChecked="{Binding IsLoopBack}"/>
            <CheckBox Content="Translate" Width="78" Height="17" IsChecked="{Binding IsTranslate}"/>
        </StackPanel>
        <Grid Grid.Row="1">
            <MediaElement x:Name="mediaElement" 
                        Visibility="Collapsed"
                        HorizontalAlignment="Center" 
                        VerticalAlignment="Top" 
                        MinHeight="30" 
                        MinWidth="400" 
                        Margin="10" 
                        LoadedBehavior="Manual"
                        UnloadedBehavior="Stop"
                           MediaFailed="mediaElement_MediaFailed"/>
        </Grid>
        <StackPanel HorizontalAlignment="Center" 
                    Grid.Row="2" 
                    Orientation="Horizontal" Width="246" Margin="0,0,0,5">
            <Button x:Name="seekBackButton"
                    Style="{StaticResource CircularButton}" 
                    FontFamily="{StaticResource SymbolFontFamily}" 
                    Content="&#xE76B;"
                    Margin="5"
                    Click="seekBackButton_Click"/>
            <Button x:Name="playButton"
                    Style="{StaticResource CircularButton}" 
                    FontFamily="{StaticResource SymbolFontFamily}" 
                    Content="&#xE768;"
                    Margin="5"
                    Click="playButton_Click"/>
            <Button x:Name="pauseButton"
                    Style="{StaticResource CircularButton}" 
                    FontFamily="{StaticResource SymbolFontFamily}" 
                    Content="&#xE769;" 
                    Margin="5"
                    Click="pauseButton_Click"/>
            <Button x:Name="stopButton" 
                    Style="{StaticResource CircularButton}" 
                    FontFamily="{StaticResource SymbolFontFamily}" 
                    Content="&#xE71A;" 
                    Margin="5"
                    Click="stopButton_Click"/>

        </StackPanel>
        <StackPanel Orientation="Horizontal" Margin="0" Grid.Row="2" Grid.Column="2" HorizontalAlignment="Center">
            <Button x:Name="transcribeButton"
                    Content="Transcribe" 
                    ClickMode="Press"
                    Command="{Binding TranscribeCommand}"
                    Style="{StaticResource ActionButtonStyle}" />
            <Button x:Name="stopTranscribeButton"
                    Content="Stop Transcribe" 
                    ClickMode="Press"
                    Command="{Binding StopCommand}"
                    Style="{StaticResource ActionButtonStyle}" />
            <Button x:Name="clearText"
                    Content="Clear Text" 
                    ClickMode="Press"
                    Command="{Binding ClearTextCommand}"
                    Style="{StaticResource ActionButtonStyle}" />
        </StackPanel>
        <TextBox Grid.Row="3" Grid.ColumnSpan="2"
             AcceptsReturn="True" 
             TextWrapping="Wrap" 
             Margin="30,10,30,10" 
             Padding="5" 
             ScrollViewer.VerticalScrollBarVisibility="Auto"
             Text="{Binding Transcription, NotifyOnTargetUpdated=True, Mode=OneWay}" FontSize="14"
                 TargetUpdated="textTranscriber_TargetUpdated"
                 Name="textTranscriber"
             />
    </Grid>
</Window>
